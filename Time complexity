PROBLEM:

What is the time complexity of the following code :
    int a = 0;
    for (i = 0; i < N; i++) {
        for (j = N; j > i; j--) {
            a = a + i + j;
        }
    }

solution: 

for 1st iteration of outer loop ,inner loop will run N times 
for 2nd iteration of outer loop, inner loop will run N-1 times
for 3rd iteration of outer loop, inner loop will run N-2 times
.
.
..
.
==N+(N-1)+(N-2). . . . .+1= (N/2)(1+N)

=N/2 + N**2/2

so time complexity would be O(N**2)

PROBLEM:

 In a competition, four different functions are observed. All the functions use a single for loop and within the for loop, the same set of statements are executed.
Consider the following for loops:
  A) for(i = 0; i < n; i++)

  B) for(i = 0; i < n; i += 2)

  C) for(i = 1; i < n; i *= 2)

  D) for(i = n; i > -1; i /= 2)

If n is the size of input(positive), which function is the most efficient? In other words, which loop completes the fastest.

SOLUTION:: 

time complexity of 1st loop would be O(n) as it will iterate N times

time complexity of 2nd loop would be O(n/2) as it is iterating n/2 times because value of i is incremented by 2 

time complexity of 3rd loop would be O(log(n)) as it will run 4(log(16)) times if n is 16 .

4th loop is infinite

MOST EFFICIENT LOOP WOULD BE ONE HAVING TIME COMPLEXITY O(log(N)) 


PROBLEM:

 What is time complexity of following code :
        int count = 0;
        for (int i = N; i > 0; i /= 2) {
            for (int j = 0; j < i; j++) {
                count += 1;
            }
        }

SOLUTION:

for 1st iteration of outer for loop , inner loop will iterate N times
for 2nd iteration of outer for loop, inner loop will iterate N/2 times

this gives: N + N/2 + N/4 .. . . . . +1
time complexity= O(N)



